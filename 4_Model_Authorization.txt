Purpose:
In AppMusicRazor
Add CRUD User Authorized to access to a class in Models
Add Serverside model level Authorization and Forbid access to resoure if User not authorized to access it

Steps:
1. In Application add a folder named ModelAuthorization

2. In folder ModelAuthorization add two classes
   public static class MusicGroupOperations
   public class MusicGroupAuthorizationHandler : AuthorizationHandler<OperationAuthorizationRequirement, MusicGroup>

3. In ListOfGroups.cshtml.cs add namespaces
   using Microsoft.AspNetCore.Authorization;
   using AppMusicRazor.ModelAuthorization;

4. Inject IAuthorizationService into ListOfGroups constructor. Set a private field _authorizationService to store the injected service

5. In ListOfGroups.cshtml.cs modify OnPostDeleteGroup to check if User is Authorized to delete a group
   var mg = await _service.ReadMusicGroupAsync(groupId, true);
   var result = await _authorizationService.AuthorizeAsync(User, mg, MusicGroupOperations.Delete);
   if (!result.Succeeded)
   {
         return Forbid();
   }

6. In program.cs add model authorization service
//Model Authorization
builder.Services.AddSingleton<IAuthorizationHandler, MusicGroupAuthorizationHandler>();

7. Run the app and see that you are also redirected to Login in case you try to delete a group
   if you are logged in, you can delete the group


